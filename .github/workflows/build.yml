name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - name: Set runtime variable
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          echo "RUNTIME=win-x64" >> $GITHUB_ENV
        else
          echo "RUNTIME=linux-x64" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          nuget-${{ runner.os }}-

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: '**/obj'
        key: obj-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          obj-${{ runner.os }}-

    - name: Build MonoPhysics
      run: dotnet build MonoPhysics/MonoPhysics.csproj --no-restore

    - name: Build MonoPhysics.Core.Tests
      run: dotnet build MonoPhysics.Core.Tests/MonoPhysics.Core.Tests.csproj --no-restore

    - name: Publish MonoPhysics
      run: dotnet publish MonoPhysics/MonoPhysics.csproj -c Release -o ./publish/MonoPhysics --self-contained --runtime ${{ env.RUNTIME }}

    - name: Verify published artifacts
      run: |
        echo "Published files:"
        ls -R ./publish/MonoPhysics

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: published-app-${{ matrix.os }}
        path: ./publish